{"ast":null,"code":"var _jsxFileName = \"E:\\\\python\\\\shellovation\\\\frontend\\\\src\\\\Components\\\\Popular\\\\Popular.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Popular.css';\nimport Item from '../Item/Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popular = () => {\n  _s();\n  const [products, setProducts] = useState([]); // State to store products\n  const [loading, setLoading] = useState(true); // Loading state to show loading indicator\n  const [error, setError] = useState(null); // Error state to handle errors\n\n  // Fetch products from the backend\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/get-product'); // Replace with your backend URL\n        if (!response.ok) {\n          throw new Error('Failed to fetch products');\n        }\n        const data = await response.json(); // Parse the response as JSON\n        setProducts(data.products); // Set the products to the state\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (err) {\n        setError('Error fetching products');\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchProducts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Show loading message while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Show error message if there's an error\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popular\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"POPULAR IN WOMEN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-item\",\n      children: products.slice(0, 4).map((item, i) => {\n        // Display only the first 4 products\n        return /*#__PURE__*/_jsxDEV(Item, {\n          id: item.id,\n          name: item.name,\n          image: item.image,\n          new_price: item.new_price,\n          old_price: item.old_price\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Popular, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = Popular;\nexport default Popular;\nvar _c;\n$RefreshReg$(_c, \"Popular\");","map":{"version":3,"names":["React","useState","useEffect","Item","jsxDEV","_jsxDEV","Popular","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","response","fetch","ok","Error","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","map","item","i","id","name","image","new_price","old_price","_c","$RefreshReg$"],"sources":["E:/python/shellovation/frontend/src/Components/Popular/Popular.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Popular.css';\r\nimport Item from '../Item/Item';\r\n\r\nconst Popular = () => {\r\n  const [products, setProducts] = useState([]); // State to store products\r\n  const [loading, setLoading] = useState(true); // Loading state to show loading indicator\r\n  const [error, setError] = useState(null); // Error state to handle errors\r\n\r\n  // Fetch products from the backend\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/get-product'); // Replace with your backend URL\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch products');\r\n        }\r\n        const data = await response.json(); // Parse the response as JSON\r\n        setProducts(data.products); // Set the products to the state\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      } catch (err) {\r\n        setError('Error fetching products');\r\n        setLoading(false); // Set loading to false on error\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading message while fetching data\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>; // Show error message if there's an error\r\n  }\r\n\r\n  return (\r\n    <div className=\"popular\">\r\n      <h1>POPULAR IN WOMEN</h1>\r\n      <hr />\r\n      <div className=\"popular-item\">\r\n        {products.slice(0, 4).map((item, i) => { // Display only the first 4 products\r\n          return (\r\n            <Item\r\n              key={i}\r\n              id={item.id}\r\n              name={item.name}\r\n              image={item.image}\r\n              new_price={item.new_price}\r\n              old_price={item.old_price}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCX,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC,CAAC,CAAC;QAC5BG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZR,QAAQ,CAAC,yBAAyB,CAAC;QACnCF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,IAAId,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAiB,QAAA,EAAMV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EAC7B;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAL,QAAA,gBACtBjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAL,QAAA,EAC1Bd,QAAQ,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QAAE;QACvC,oBACE1B,OAAA,CAACF,IAAI;UAEH6B,EAAE,EAAEF,IAAI,CAACE,EAAG;UACZC,IAAI,EAAEH,IAAI,CAACG,IAAK;UAChBC,KAAK,EAAEJ,IAAI,CAACI,KAAM;UAClBC,SAAS,EAAEL,IAAI,CAACK,SAAU;UAC1BC,SAAS,EAAEN,IAAI,CAACM;QAAU,GALrBL,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CArDID,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAuDb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}