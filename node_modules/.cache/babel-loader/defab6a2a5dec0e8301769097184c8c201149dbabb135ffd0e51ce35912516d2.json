{"ast":null,"code":"var _jsxFileName = \"E:\\\\python\\\\shellovation\\\\frontend\\\\src\\\\Components\\\\NewCollections\\\\NewCollections.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './NewCollections.css';\nimport Item from '../Item/Item';\nimport new_collection from '../Assets/new_collections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCollections = () => {\n  _s();\n  const [products, setProducts] = useState([]); // State to store products\n  const [loading, setLoading] = useState(true); // Loading state to show loading indicator\n  const [error, setError] = useState(null); // Error state to handle errors\n\n  // Fetch products from the backend\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/get-product'); // Replace with your backend URL\n        if (!response.ok) {\n          throw new Error('Failed to fetch products');\n        }\n        const data = await response.json(); // Parse the response as JSON\n        setProducts(data.products); // Set the products to the state\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (err) {\n        setError('Error fetching products');\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchProducts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Show loading message while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Show error message if there's an error\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-collections\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NEW COLLECTIONS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collections\",\n      children: new_collection.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          id: item.id,\n          name: item.name,\n          image: item.image,\n          new_price: item.new_price,\n          old_price: item.old_price\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCollections, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = NewCollections;\nexport default NewCollections;\nvar _c;\n$RefreshReg$(_c, \"NewCollections\");","map":{"version":3,"names":["React","Item","new_collection","jsxDEV","_jsxDEV","NewCollections","_s","products","setProducts","useState","loading","setLoading","error","setError","useEffect","fetchProducts","response","fetch","ok","Error","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","i","id","name","image","new_price","old_price","_c","$RefreshReg$"],"sources":["E:/python/shellovation/frontend/src/Components/NewCollections/NewCollections.jsx"],"sourcesContent":["import React,{} from 'react'\r\nimport './NewCollections.css'\r\nimport Item from '../Item/Item'\r\nimport new_collection from '../Assets/new_collections'\r\nconst NewCollections = () => {\r\n  const [products, setProducts] = useState([]); // State to store products\r\n  const [loading, setLoading] = useState(true); // Loading state to show loading indicator\r\n  const [error, setError] = useState(null); // Error state to handle errors\r\n\r\n  // Fetch products from the backend\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/get-product'); // Replace with your backend URL\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch products');\r\n        }\r\n        const data = await response.json(); // Parse the response as JSON\r\n        setProducts(data.products); // Set the products to the state\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      } catch (err) {\r\n        setError('Error fetching products');\r\n        setLoading(false); // Set loading to false on error\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading message while fetching data\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>; // Show error message if there's an error\r\n  }\r\n  return (\r\n    <div className='new-collections'>\r\n        <h1>NEW COLLECTIONS</h1>\r\n        <hr />\r\n        <div className=\"collections\">\r\n            {new_collection.map((item,i)=>{\r\n                return <Item key={i} id ={item.id} name={item.name} image={item.image} new_price = {item.new_price} old_price={item.old_price}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewCollections"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}