{"ast":null,"code":"var _jsxFileName = \"E:\\\\python\\\\shellovation\\\\frontend\\\\src\\\\Components\\\\AddToCart\\\\AddToCartButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddToCartButton = ({\n  productId\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState(1);\n  const [message, setMessage] = useState('');\n  const handleAddToCart = async () => {\n    try {\n      const response = await fetch('/addtocart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          productId,\n          quantity\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n      } else {\n        setMessage(data.message || 'Error adding product to cart');\n      }\n    } catch (error) {\n      setMessage('Network error. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: quantity,\n      min: \"1\",\n      onChange: e => setQuantity(Number(e.target.value)),\n      style: {\n        width: '60px',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToCart,\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AddToCartButton, \"d2Ql+2ObANd/QYb7SYTM0cqBcjI=\");\n_c = AddToCartButton;\nexport default AddToCartButton;\nvar _c;\n$RefreshReg$(_c, \"AddToCartButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddToCartButton","productId","_s","quantity","setQuantity","message","setMessage","handleAddToCart","response","fetch","method","headers","body","JSON","stringify","userId","data","json","ok","error","children","type","value","min","onChange","e","Number","target","style","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/python/shellovation/frontend/src/Components/AddToCart/AddToCartButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddToCartButton = ({ productId }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAddToCart = async () => {\r\n    try {\r\n      const response = await fetch('/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n          productId,\r\n          quantity,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.message);\r\n      } else {\r\n        setMessage(data.message || 'Error adding product to cart');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Network error. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        value={quantity}\r\n        min=\"1\"\r\n        onChange={(e) => setQuantity(Number(e.target.value))}\r\n        style={{ width: '60px', marginRight: '10px' }}\r\n      />\r\n      <button onClick={handleAddToCart}>Add to Cart</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToCartButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM;UACNd,SAAS;UACTE;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfZ,UAAU,CAACU,IAAI,CAACX,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLC,UAAU,CAACU,IAAI,CAACX,OAAO,IAAI,8BAA8B,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdb,UAAU,CAAC,wCAAwC,CAAC;IACtD;EACF,CAAC;EAED,oBACEP,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEnB,QAAS;MAChBoB,GAAG,EAAC,GAAG;MACPC,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACsB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC,CAAE;MACrDM,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFnC,OAAA;MAAQoC,OAAO,EAAE5B,eAAgB;MAAAa,QAAA,EAAC;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrD7B,OAAO,iBAAIN,OAAA;MAAAqB,QAAA,EAAIf;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAChC,EAAA,CA3CIF,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AA6CrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}